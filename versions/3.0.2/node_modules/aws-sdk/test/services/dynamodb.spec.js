(function() {
  var AWS, helpers;

  helpers = require('../helpers');

  AWS = helpers.AWS;

  describe('AWS.DynamoDB', function() {
    var configure, ddb;
    configure = function(options) {
      return new AWS.Config(options);
    };
    ddb = function(options) {
      return new AWS.DynamoDB(configure(options));
    };
    describe('config', function() {
      return it('returns the configuration object it was constructed with', function() {
        var config, dynamo;
        config = configure({
          endpoint: 'localhost'
        });
        dynamo = new AWS.DynamoDB(config);
        return expect(dynamo.config).toEqual(config);
      });
    });
    describe('numRetries', function() {
      it('defaults to 10', function() {
        return expect(ddb().numRetries()).toEqual(10);
      });
      return it('can be overridden in the config', function() {
        return expect(ddb({
          maxRetries: 2
        }).numRetries()).toEqual(2);
      });
    });
    return describe('retryDelays', function() {
      return it('has a custom backoff function', function() {
        var delays;
        delays = [0, 50, 100, 200, 400, 800, 1600, 3200, 6400, 12800];
        return expect(ddb().retryDelays()).toEqual(delays);
      });
    });
  });

}).call(this);
