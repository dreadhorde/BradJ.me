(function() {
  var AWS, helpers;

  helpers = require('../helpers');

  AWS = helpers.AWS;

  describe('AWS.RDS', function() {
    return describe('createDBSecurityGroup', function() {
      return it('properly parses XML response', function() {
        var body, params, rds;
        rds = new AWS.RDS();
        body = "<CreateDBSecurityGroupResponse xmlns=\"http://rds.amazonaws.com/doc/2013-09-09/\">\n  <CreateDBSecurityGroupResult>\n    <DBSecurityGroup>\n      <EC2SecurityGroups/>\n      <DBSecurityGroupDescription>foo</DBSecurityGroupDescription>\n      <IPRanges/>\n      <OwnerId>1234567890</OwnerId>\n      <DBSecurityGroupName>foo</DBSecurityGroupName>\n    </DBSecurityGroup>\n  </CreateDBSecurityGroupResult>\n  <ResponseMetadata>\n    <RequestId>1234567890</RequestId>\n  </ResponseMetadata>\n</CreateDBSecurityGroupResponse>";
        helpers.mockHttpResponse(200, {}, body);
        params = {
          DBSecurityGroupName: 'foo',
          DBSecurityGroupDescription: 'foo'
        };
        return rds.createDBSecurityGroup(params, function(error, data) {
          expect(error).toBe(null);
          expect(this.requestId).toEqual('1234567890');
          return expect(data).toEqual({
            DBSecurityGroup: {
              DBSecurityGroupDescription: 'foo',
              DBSecurityGroupName: 'foo',
              EC2SecurityGroups: [],
              IPRanges: [],
              OwnerId: '1234567890'
            },
            ResponseMetadata: {
              RequestId: '1234567890'
            }
          });
        });
      });
    });
  });

}).call(this);
